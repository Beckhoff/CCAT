image: lbs1:5500/beckhoff/docker-ubuntu-cached:latest
stages:
  - build
  - test
  - trigger

.build-module: &build-module
  stage: build
  script:
    - apt-get update > /dev/null && apt-get install -y build-essential wget git unzip bc > /dev/null
    - wget -nv --no-check-certificate -O artifacts.zip https://lbs1/beckhoff/build-kernel/builds/artifacts/${KERNEL_REF}/download?job=${KERNEL_JOB}
    - unzip -q artifacts.zip
    - make KDIR=kernel-modules/lib/modules/*/build
  artifacts:
    paths:
      - ccat.ko
      - ccat_netdev.ko
      - ccat_gpio.ko
      - ccat_sram.ko
      - ccat_systemtime.ko
      - ccat_update.ko

build-i386-module:
  <<: *build-module
  variables:
    KERNEL_JOB: 'build-i386-kernel'
    KERNEL_REF: 'stable-rt'
    ARCH: 'i386'

build-x86_64-module:
  <<: *build-module
  variables:
    KERNEL_JOB: 'build-x86_64-kernel'
    KERNEL_REF: 'stable-rt'
    ARCH: 'x86_64'

.test: &test
  stage: test
  script:
    - apt-get update > /dev/null && apt-get install -y openssh-client wget unzip > /dev/null
    - wget -nv --no-check-certificate -O artifacts.zip https://lbs1/beckhoff/build-kernel/builds/artifacts/${KERNEL_REF}/download?job=${KERNEL_JOB}
    - unzip -q artifacts.zip && rm artifacts.zip
    - wget -nv --no-check-certificate -O artifacts.zip https://lbs1/beckhoff/build-alpine/builds/artifacts/${ROOTFS_REF}/download?job=${ROOTFS_JOB}
    - unzip -q artifacts.zip
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp ./rootfs.cpio.xz test_runner@lbs1:/tmp/rootfs-${DEVICE}-${CI_BUILD_ID}.cpio.xz
    - scp vmlinuz test_runner@lbs1:/tmp/vmlinuz-${DEVICE}-${CI_BUILD_ID}
    - tar -czf tests.tar.gz ./scripts ./unittest ccat.ko ccat_netdev.ko ccat_gpio.ko ccat_sram.ko ccat_systemtime.ko ccat_update.ko
    - scp ./tests.tar.gz test_runner@lbs1:/tmp/tests-ccat-${CI_BUILD_ID}.tar.gz
    - ssh test_runner@lbs1 "cd ~/workspace/beckhoff-linux-ci/pxe-server/ && ./62_run_test.sh ${DEVICE_ID}-${DEVICE} /tmp/vmlinuz-${DEVICE}-${CI_BUILD_ID} /tmp/rootfs-${DEVICE}-${CI_BUILD_ID}.cpio.xz /tmp/tests-ccat-${CI_BUILD_ID}.tar.gz 'tar xf ./tests-ccat-${CI_BUILD_ID}.tar.gz' ./unittest/load-module.sh './unittest/test-all.sh ${LOCAL_IP} ${SERVER_IP}'"

test-cx2030-x64:
  <<: *test
  variables:
    DEVICE: 'CX2030'
    DEVICE_ID: 'CX05'
    LOCAL_IP: 'fd00:bbbb::cca5/64'
    SERVER_IP: 'fd00:bbbb::17'
    KERNEL_REF: 'stable-rt'
    KERNEL_JOB: 'build-x86_64-kernel'
    ROOTFS_JOB: 'build-x86_64'
    ROOTFS_REF: 'stable'
  dependencies:
    - build-x86_64-module

test-cx5140-x64:
  <<: *test
  variables:
    DEVICE: 'CX5140'
    DEVICE_ID: 'CX03'
    LOCAL_IP: 'fd00:bbbb::cca3/64'
    SERVER_IP: 'fd00:bbbb::17'
    KERNEL_REF: 'stable-rt'
    KERNEL_JOB: 'build-x86_64-kernel'
    ROOTFS_JOB: 'build-x86_64'
    ROOTFS_REF: 'stable'
  dependencies:
    - build-x86_64-module

test-cx2030-i386:
  <<: *test
  variables:
    DEVICE: 'CX2030'
    DEVICE_ID: 'CX05'
    LOCAL_IP: 'fd00:bbbb::cca5/64'
    SERVER_IP: 'fd00:bbbb::17'
    KERNEL_REF: 'stable-rt'
    KERNEL_JOB: 'build-i386-kernel'
    ROOTFS_JOB: 'build-i386'
    ROOTFS_REF: 'stable'
  dependencies:
    - build-i386-module

test-cx5140-i386:
  <<: *test
  variables:
    DEVICE: 'CX5140'
    DEVICE_ID: 'CX03'
    LOCAL_IP: 'fd00:bbbb::cca3/64'
    SERVER_IP: 'fd00:bbbb::17'
    KERNEL_REF: 'stable-rt'
    KERNEL_JOB: 'build-i386-kernel'
    ROOTFS_JOB: 'build-i386'
    ROOTFS_REF: 'stable'
  dependencies:
    - build-i386-module

test-cx5020:
  <<: *test
  variables:
    DEVICE: 'CX5020'
    DEVICE_ID: 'CX01'
    LOCAL_IP: 'fd00:bbbb::cca1/64'
    SERVER_IP: 'fd00:bbbb::17'
    KERNEL_REF: 'stable-rt'
    KERNEL_JOB: 'build-i386-kernel'
    ROOTFS_JOB: 'build-i386'
    ROOTFS_REF: 'stable'
  dependencies:
    - build-i386-module

trigger:
  stage: trigger
  except:
    - triggers
  script:
    - curl -k -X POST -F token=$SELFTRIGGER_TOKEN -F "ref=${CI_COMMIT_REF_NAME}" -F "variables[KERNEL_REF]=prepatch" https://lbs1/api/v3/projects/12/trigger/builds
    - curl -k -X POST -F token=$SELFTRIGGER_TOKEN -F "ref=${CI_COMMIT_REF_NAME}" -F "variables[KERNEL_REF]=rt-devel" https://lbs1/api/v3/projects/12/trigger/builds
